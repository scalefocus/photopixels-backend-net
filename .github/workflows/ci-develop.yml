# --------------------------------------------------------------------------------------------------
# This GitHub Actions workflow file is used to automate the build process for the PhotoPixels
# .NET-based backend project. The workflow includes several jobs to ensure the quality and delivery
# of the project, such as:
#
# - check: Runs static analysis tools to check code quality and style.
# - test: Executes unit tests to ensure the correctness of the code.
# - build: Compiles the source code and generates the necessary artifacts.
# - assemble-signed-release: Builds the application APK and signs it for release.
# - distribute: Distributes the signed APK to the appropriate channels (e.g., Firebase App
#       Distribution, Google Play).
#
# Note: The specific jobs and steps may evolve over time as the project requirements change.
# --------------------------------------------------------------------------------------------------

name: dotNET CI
run-name: ${{ github.actor }} started the .NET CI workflow

on:
  push:
    branches:
      - main
      - develop
      - release/**
      ###TEMP for tests
      - feature/ci-cd-v2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set a variable that this workflow runs on Github Actions
        run: |
          if [[ "${GITHUB_ACTIONS}" == "true" ]]; then
              echo "TEST_PROJECT=SF.PhotoPixels.API.Integration.Tests" >> $GITHUB_ENV
              exit 0
          else
              exit 1
          fi

      - name: Use the TEST_PROJECT environment variable
        run: echo "The TEST_PROJECT variable is ${{ env.TEST_PROJECT }}"

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: |
          dotnet build

      - name: Test
        run: dotnet test --no-build --verbosity normal --filter "Category!=Integration"
        ### if: "${GITHUB_ACTIONS}" == "true" 

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB }}

      - name: Create a multi-platform Docker builder
        run: docker buildx create --name photopixelsBuilder --bootstrap --use

      - name: Build docker image
        run: |
          ### dotnet publish --os linux --arch x64 -c Release -p:ContainerImageTag=$(steps.gitversion.outputs.SemVer) -p:AssemblyVersion=$(steps.gitversion.outputs.MajorMinorPatch) -p:Version=$(steps.gitversion.outputs.SemVer)

          print "ZZZ v1 = $(steps.gitversion.outputs.SemVer)"
          print "ZZZ v2 = $(steps.gitversion.outputs.MajorMinorPatch)"

          # docker buildx build \
          #     --platform linux/amd64,linux/arm64,linux/arm/v7 \
          #     --no-cache \
          #     --build-arg VERSION=0.8.2 \
          #     --build-arg VERSION_SUFFIX=alpha \
          #     -t scalefocusad/photopixels-backend-net:0.8.2-alpha \
          #     -f ./src/SF.PhotoPixels.API/Dockerfile . \
          #     --push

    #   - name: "Push Docker image"
    #     run: docker push scalefocusad/photopixels-backend-net:$(steps.gitversion.outputs.SemVer)
